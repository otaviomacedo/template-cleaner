{
 "additionalIdentifiers": [
  [
   "/properties/StateMachineName"
  ]
 ],
 "additionalProperties": false,
 "createOnlyProperties": [
  "/properties/StateMachineName",
  "/properties/StateMachineType"
 ],
 "definitions": {
  "CloudWatchLogsLogGroup": {
   "additionalProperties": false,
   "properties": {
    "LogGroupArn": {
     "maxLength": 256,
     "minLength": 1,
     "type": "string"
    }
   },
   "type": "object"
  },
  "Definition": {
   "allOf": [
    {
     "additionalProperties": false,
     "definitions": {
      "choice": {
       "additionalProperties": false,
       "definitions": {
        "Operator": {
         "properties": {
          "And": {
           "items": {
            "$ref": "#/definitions/choice/definitions/Operator"
           },
           "type": "array"
          },
          "BooleanEquals": {
           "type": "boolean"
          },
          "BooleanEqualsPath": {
           "type": "string"
          },
          "IsBoolean": {
           "type": "boolean"
          },
          "IsNull": {
           "type": "boolean"
          },
          "IsNumeric": {
           "type": "boolean"
          },
          "IsPresent": {
           "type": "boolean"
          },
          "IsString": {
           "type": "boolean"
          },
          "IsTimestamp": {
           "type": "boolean"
          },
          "Next": {
           "pattern": "^.{1,128}$",
           "type": "string"
          },
          "Not": {
           "$ref": "#/definitions/choice/definitions/Operator"
          },
          "NumericEquals": {
           "type": "number"
          },
          "NumericEqualsPath": {
           "type": "string"
          },
          "NumericGreaterThan": {
           "type": "number"
          },
          "NumericGreaterThanEquals": {
           "type": "number"
          },
          "NumericGreaterThanEqualsPath": {
           "type": "string"
          },
          "NumericGreaterThanPath": {
           "type": "string"
          },
          "NumericLessThan": {
           "type": "number"
          },
          "NumericLessThanEquals": {
           "type": "number"
          },
          "NumericLessThanEqualsPath": {
           "type": "string"
          },
          "NumericLessThanPath": {
           "type": "string"
          },
          "Or": {
           "items": {
            "$ref": "#/definitions/choice/definitions/Operator"
           },
           "type": "array"
          },
          "StringEquals": {
           "type": "string"
          },
          "StringEqualsPath": {
           "type": "string"
          },
          "StringGreaterThan": {
           "type": "string"
          },
          "StringGreaterThanEquals": {
           "type": "string"
          },
          "StringGreaterThanEqualsPath": {
           "type": "string"
          },
          "StringGreaterThanPath": {
           "type": "string"
          },
          "StringLessThan": {
           "type": "string"
          },
          "StringLessThanEquals": {
           "type": "string"
          },
          "StringLessThanEqualsPath": {
           "type": "string"
          },
          "StringLessThanPath": {
           "type": "string"
          },
          "TimestampEquals": {
           "type": "string"
          },
          "TimestampEqualsPath": {
           "type": "string"
          },
          "TimestampGreaterThan": {
           "type": "string"
          },
          "TimestampGreaterThanEquals": {
           "type": "string"
          },
          "TimestampGreaterThanEqualsPath": {
           "type": "string"
          },
          "TimestampGreaterThanPath": {
           "type": "string"
          },
          "TimestampLessThan": {
           "type": "string"
          },
          "TimestampLessThanEquals": {
           "type": "string"
          },
          "TimestampLessThanEqualsPath": {
           "type": "string"
          },
          "TimestampLessThanPath": {
           "type": "string"
          },
          "Variable": {
           "type": "string"
          }
         },
         "requiredXor": [
          "And",
          "BooleanEquals",
          "BooleanEqualsPath",
          "IsBoolean",
          "IsNull",
          "IsNumeric",
          "IsPresent",
          "IsString",
          "IsTimestamp",
          "Not",
          "NumericEquals",
          "NumericEqualsPath",
          "NumericGreaterThan",
          "NumericGreaterThanPath",
          "NumericGreaterThanEquals",
          "NumericGreaterThanEqualsPath",
          "NumericLessThan",
          "NumericLessThanPath",
          "NumericLessThanEquals",
          "NumericLessThanEqualsPath",
          "Or",
          "StringEquals",
          "StringEqualsPath",
          "StringGreaterThan",
          "StringGreaterThanPath",
          "StringGreaterThanEquals",
          "StringGreaterThanEqualsPath",
          "StringLessThan",
          "StringLessThanPath",
          "StringLessThanEquals",
          "StringLessThanEqualsPath",
          "TimestampEquals",
          "TimestampEqualsPath",
          "TimestampGreaterThan",
          "TimestampGreaterThanPath",
          "TimestampGreaterThanEquals",
          "TimestampGreaterThanEqualsPath",
          "TimestampLessThan",
          "TimestampLessThanPath",
          "TimestampLessThanEquals",
          "TimestampLessThanEqualsPath"
         ],
         "type": "object"
        }
       },
       "properties": {
        "Choices": {
         "items": {
          "$ref": "#/definitions/choice/definitions/Operator"
         },
         "type": "array"
        },
        "Comment": {
         "type": "string"
        },
        "Default": {
         "type": "string"
        },
        "End": {
         "enum": [
          true
         ]
        },
        "InputPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "Next": {
         "pattern": "^.{1,128}$",
         "type": "string"
        },
        "OutputPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "Type": {
         "enum": [
          "Choice"
         ],
         "type": "string"
        }
       },
       "required": [
        "Type",
        "Choices"
       ],
       "type": "object"
      },
      "fail": {
       "additionalProperties": false,
       "properties": {
        "Cause": {
         "type": "string"
        },
        "CausePath": {
         "type": "string"
        },
        "Comment": {
         "type": "string"
        },
        "Error": {
         "type": "string"
        },
        "ErrorPath": {
         "type": "string"
        },
        "InputPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "OutputPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "Type": {
         "enum": [
          "Fail"
         ],
         "type": "string"
        }
       },
       "required": [
        "Type"
       ],
       "type": "object"
      },
      "map": {
       "additionalProperties": false,
       "properties": {
        "Catch": {
         "items": {
          "properties": {
           "ErrorEquals": {
            "items": {
             "types": "string"
            },
            "type": "array"
           },
           "Next": {
            "pattern": "^.{1,128}$",
            "type": "string"
           }
          },
          "required": [
           "ErrorEquals",
           "Next"
          ],
          "types": "object"
         },
         "type": "array"
        },
        "Comment": {
         "type": "string"
        },
        "End": {
         "enum": [
          true
         ]
        },
        "InputPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "ItemBatcher": {
         "type": "object"
        },
        "ItemProcessor": {
         "properties": {
          "Comment": {
           "type": "string"
          },
          "ProcessorConfig": {
           "properties": {
            "Mode": {
             "type": "string"
            }
           },
           "type": "object"
          },
          "StartAt": {
           "type": "string"
          },
          "States": {
           "additionalProperties": false,
           "patternProperties": {
            "^.{1,128}$": {
             "$ref": "#/definitions/state"
            }
           },
           "type": "object"
          },
          "TimeoutSeconds": {
           "minimum": 0,
           "type": "integer"
          }
         },
         "required": [
          "StartAt",
          "States"
         ],
         "type": "object"
        },
        "ItemReader": {
         "additionalProperties": true,
         "type": "object"
        },
        "ItemSelector": {
         "additionalProperties": true,
         "type": "object"
        },
        "ItemsPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "Label": {
         "type": "string"
        },
        "MaxConcurrency": {
         "minimum": 0,
         "type": "number"
        },
        "MaxConcurrencyPath": {
         "type": "string"
        },
        "Next": {
         "pattern": "^.{1,128}$",
         "type": "string"
        },
        "OutputPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "Parameters": {
         "type": "object"
        },
        "ResultPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "ResultSelector": {
         "type": "object"
        },
        "ResultWriter": {
         "type": "string"
        },
        "Retry": {
         "items": {
          "properties": {
           "BackoffRate": {
            "minimum": 0,
            "type": "number"
           },
           "ErrorEquals": {
            "items": {
             "types": "string"
            },
            "type": "array"
           },
           "IntervalSeconds": {
            "minimum": 0,
            "type": "number"
           },
           "MaxAttempts": {
            "minimum": 0,
            "type": "number"
           }
          },
          "required": [
           "ErrorEquals"
          ],
          "types": "object"
         },
         "type": "array"
        },
        "ToleratedFailureCount": {
         "type": "integer"
        },
        "ToleratedFailureCountPath": {
         "type": "string"
        },
        "ToleratedFailurePercentage": {
         "type": "integer"
        },
        "ToleratedFailurePercentagePath": {
         "type": "string"
        },
        "Type": {
         "enum": [
          "Map"
         ],
         "type": "string"
        }
       },
       "required": [
        "Type",
        "ItemProcessor"
       ],
       "requiredXor": [
        "Next",
        "End"
       ],
       "type": "object"
      },
      "parallel": {
       "additionalProperties": false,
       "properties": {
        "Branches": {
         "items": {
          "$ref": "#/"
         },
         "type": "array"
        },
        "Catch": {
         "items": {
          "properties": {
           "ErrorEquals": {
            "items": {
             "types": "string"
            },
            "type": "array"
           },
           "Next": {
            "pattern": "^.{1,128}$",
            "type": "string"
           }
          },
          "required": [
           "ErrorEquals",
           "Next"
          ],
          "types": "object"
         },
         "type": "array"
        },
        "Comment": {
         "type": "string"
        },
        "End": {
         "enum": [
          true
         ]
        },
        "InputPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "Next": {
         "pattern": "^.{1,128}$",
         "type": "string"
        },
        "OutputPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "ResultPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "ResultSelector": {
         "type": "object"
        },
        "Retry": {
         "items": {
          "properties": {
           "BackoffRate": {
            "minimum": 0,
            "type": "number"
           },
           "ErrorEquals": {
            "items": {
             "types": "string"
            },
            "type": "array"
           },
           "IntervalSeconds": {
            "minimum": 0,
            "type": "number"
           },
           "MaxAttempts": {
            "minimum": 0,
            "type": "number"
           }
          },
          "required": [
           "ErrorEquals"
          ],
          "types": "object"
         },
         "type": "array"
        },
        "Type": {
         "enum": [
          "Parallel"
         ],
         "type": "string"
        }
       },
       "required": [
        "Type",
        "Branches"
       ],
       "requiredXor": [
        "Next",
        "End"
       ],
       "type": "object"
      },
      "pass": {
       "additionalProperties": false,
       "properties": {
        "Comment": {
         "type": "string"
        },
        "End": {
         "enum": [
          true
         ]
        },
        "InputPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "Next": {
         "pattern": "^.{1,128}$",
         "type": "string"
        },
        "OutputPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "Parameters": {
         "type": "object"
        },
        "Result": {},
        "ResultPath": {
         "type": "string"
        },
        "Type": {
         "enum": [
          "Pass"
         ],
         "type": "string"
        }
       },
       "required": [
        "Type"
       ],
       "requiredXor": [
        "Next",
        "End"
       ],
       "type": "object"
      },
      "state": {
       "allOf": [
        {
         "if": {
          "properties": {
           "Type": {
            "const": "Choice"
           }
          },
          "required": [
           "Type"
          ]
         },
         "then": {
          "$ref": "#/definitions/choice"
         }
        },
        {
         "if": {
          "properties": {
           "Type": {
            "const": "Fail"
           }
          },
          "required": [
           "Type"
          ]
         },
         "then": {
          "$ref": "#/definitions/fail"
         }
        },
        {
         "if": {
          "properties": {
           "Type": {
            "const": "Parallel"
           }
          },
          "required": [
           "Type"
          ]
         },
         "then": {
          "$ref": "#/definitions/parallel"
         }
        },
        {
         "if": {
          "properties": {
           "Type": {
            "const": "Pass"
           }
          },
          "required": [
           "Type"
          ]
         },
         "then": {
          "$ref": "#/definitions/pass"
         }
        },
        {
         "if": {
          "properties": {
           "Type": {
            "const": "Succeed"
           }
          },
          "required": [
           "Type"
          ]
         },
         "then": {
          "$ref": "#/definitions/succeed"
         }
        },
        {
         "if": {
          "properties": {
           "Type": {
            "const": "Task"
           }
          },
          "required": [
           "Type"
          ]
         },
         "then": {
          "$ref": "#/definitions/task"
         }
        },
        {
         "if": {
          "properties": {
           "Type": {
            "const": "Wait"
           }
          },
          "required": [
           "Type"
          ]
         },
         "then": {
          "$ref": "#/definitions/wait"
         }
        },
        {
         "if": {
          "properties": {
           "Type": {
            "const": "Map"
           }
          },
          "required": [
           "Type"
          ]
         },
         "then": {
          "$ref": "#/definitions/map"
         }
        }
       ],
       "properties": {
        "Comment": {
         "type": "string"
        },
        "Type": {
         "enum": [
          "Pass",
          "Task",
          "Wait",
          "Choice",
          "Succeed",
          "Fail",
          "Parallel",
          "Map"
         ],
         "type": "string"
        }
       },
       "required": [
        "Type"
       ],
       "type": "object"
      },
      "succeed": {
       "additionalProperties": false,
       "properties": {
        "Comment": {
         "type": "string"
        },
        "Type": {
         "enum": [
          "Succeed"
         ],
         "type": "string"
        }
       },
       "required": [
        "Type"
       ],
       "type": "object"
      },
      "task": {
       "additionalProperties": false,
       "properties": {
        "Catch": {
         "items": {
          "properties": {
           "ErrorEquals": {
            "items": {
             "types": "string"
            },
            "type": "array"
           },
           "Next": {
            "pattern": "^.{1,128}$",
            "type": "string"
           }
          },
          "required": [
           "ErrorEquals",
           "Next"
          ],
          "types": "object"
         },
         "type": "array"
        },
        "Comment": {
         "type": "string"
        },
        "Credentials": {
         "type": [
          "string",
          "object"
         ]
        },
        "End": {
         "enum": [
          true
         ]
        },
        "HeartbeatSeconds": {
         "minimum": 1,
         "type": "number"
        },
        "HeartbeatSecondsPath": {
         "type": "string"
        },
        "InputPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "Next": {
         "pattern": "^.{1,128}$",
         "type": "string"
        },
        "OutputPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "Parameters": {
         "type": "object"
        },
        "Resource": {
         "pattern": "^arn:aws:([a-z]|-)+:([a-z]|[0-9]|-)*:[0-9]*:([a-z]|-)+:[a-zA-Z0-9-_.]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?$",
         "type": [
          "string"
         ]
        },
        "ResultPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "ResultSelector": {
         "type": "object"
        },
        "Retry": {
         "items": {
          "properties": {
           "BackoffRate": {
            "minimum": 0,
            "type": "number"
           },
           "ErrorEquals": {
            "items": {
             "types": "string"
            },
            "type": "array"
           },
           "IntervalSeconds": {
            "minimum": 0,
            "type": "number"
           },
           "MaxAttempts": {
            "minimum": 0,
            "type": "number"
           }
          },
          "required": [
           "ErrorEquals"
          ],
          "types": "object"
         },
         "type": "array"
        },
        "TimeoutSeconds": {
         "minimum": 1,
         "type": "number"
        },
        "TimeoutSecondsPath": {
         "type": "string"
        },
        "Type": {
         "enum": [
          "Task"
         ],
         "type": "string"
        }
       },
       "required": [
        "Type",
        "Resource"
       ],
       "requiredXor": [
        "Next",
        "End"
       ],
       "type": "object"
      },
      "wait": {
       "additionalProperties": false,
       "properties": {
        "Comment": {
         "type": "string"
        },
        "End": {
         "enum": [
          true
         ]
        },
        "InputPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "Next": {
         "pattern": "^.{1,128}$",
         "type": "string"
        },
        "OutputPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "Seconds": {
         "minimum": 0,
         "type": "number"
        },
        "SecondsPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "Timestamp": {
         "type": "string"
        },
        "TimestampPath": {
         "type": [
          "string",
          "null"
         ]
        },
        "Type": {
         "enum": [
          "Wait"
         ],
         "type": "string"
        }
       },
       "required": [
        "Type"
       ],
       "requiredXor": [
        "Next",
        "End"
       ],
       "type": "object"
      }
     },
     "properties": {
      "Comment": {
       "type": "string"
      },
      "StartAt": {
       "type": "string"
      },
      "States": {
       "additionalProperties": false,
       "patternProperties": {
        "^.{1,128}$": {
         "$ref": "#/definitions/state"
        }
       },
       "type": "object"
      },
      "TimeoutSeconds": {
       "minimum": 0,
       "type": "integer"
      },
      "Version": {
       "type": "string"
      }
     },
     "required": [
      "StartAt",
      "States"
     ],
     "type": "object"
    }
   ],
   "minProperties": 1,
   "type": "object"
  },
  "DefinitionSubstitutions": {
   "additionalProperties": false,
   "minProperties": 1,
   "patternProperties": {
    ".*": {
     "anyOf": [
      {
       "type": "string"
      },
      {
       "type": "integer"
      },
      {
       "type": "boolean"
      }
     ]
    }
   },
   "type": "object"
  },
  "EncryptionConfiguration": {
   "additionalProperties": false,
   "properties": {
    "KmsDataKeyReusePeriodSeconds": {
     "maximum": 900,
     "minimum": 60,
     "type": "integer"
    },
    "KmsKeyId": {
     "maxLength": 2048,
     "minLength": 1,
     "type": "string"
    },
    "Type": {
     "enum": [
      "CUSTOMER_MANAGED_KMS_KEY",
      "AWS_OWNED_KEY"
     ],
     "type": "string"
    }
   },
   "required": [
    "Type"
   ],
   "type": "object"
  },
  "LogDestination": {
   "additionalProperties": false,
   "properties": {
    "CloudWatchLogsLogGroup": {
     "$ref": "#/definitions/CloudWatchLogsLogGroup"
    }
   },
   "type": "object"
  },
  "LoggingConfiguration": {
   "additionalProperties": false,
   "properties": {
    "Destinations": {
     "insertionOrder": false,
     "items": {
      "$ref": "#/definitions/LogDestination"
     },
     "minItems": 1,
     "type": "array"
    },
    "IncludeExecutionData": {
     "type": "boolean"
    },
    "Level": {
     "enum": [
      "ALL",
      "ERROR",
      "FATAL",
      "OFF"
     ],
     "type": "string"
    }
   },
   "type": "object"
  },
  "S3Location": {
   "additionalProperties": false,
   "properties": {
    "Bucket": {
     "type": "string"
    },
    "Key": {
     "type": "string"
    },
    "Version": {
     "type": "string"
    }
   },
   "required": [
    "Bucket",
    "Key"
   ],
   "type": "object"
  },
  "TagsEntry": {
   "additionalProperties": false,
   "properties": {
    "Key": {
     "maxLength": 128,
     "minLength": 1,
     "type": "string"
    },
    "Value": {
     "maxLength": 256,
     "minLength": 1,
     "type": "string"
    }
   },
   "required": [
    "Key",
    "Value"
   ],
   "type": "object"
  },
  "TracingConfiguration": {
   "additionalProperties": false,
   "properties": {
    "Enabled": {
     "type": "boolean"
    }
   },
   "type": "object"
  }
 },
 "handlers": {
  "create": {
   "permissions": [
    "states:CreateStateMachine",
    "states:DescribeStateMachine",
    "states:TagResource",
    "iam:PassRole",
    "s3:GetObject",
    "kms:DescribeKey",
    "kms:GenerateDataKey"
   ]
  },
  "delete": {
   "permissions": [
    "states:DeleteStateMachine",
    "states:DescribeStateMachine"
   ]
  },
  "list": {
   "permissions": [
    "states:ListStateMachines"
   ]
  },
  "read": {
   "permissions": [
    "states:DescribeStateMachine",
    "states:ListTagsForResource",
    "kms:Decrypt"
   ]
  },
  "update": {
   "permissions": [
    "states:UpdateStateMachine",
    "states:TagResource",
    "states:UntagResource",
    "states:ListTagsForResource",
    "iam:PassRole",
    "kms:DescribeKey",
    "kms:GenerateDataKey"
   ]
  }
 },
 "primaryIdentifier": [
  "/properties/Arn"
 ],
 "properties": {
  "Arn": {
   "maxLength": 2048,
   "minLength": 1,
   "type": "string"
  },
  "Definition": {
   "$ref": "#/definitions/Definition"
  },
  "DefinitionS3Location": {
   "$ref": "#/definitions/S3Location"
  },
  "DefinitionString": {
   "maxLength": 1048576,
   "minLength": 1,
   "type": "string"
  },
  "DefinitionSubstitutions": {
   "$ref": "#/definitions/DefinitionSubstitutions"
  },
  "EncryptionConfiguration": {
   "$ref": "#/definitions/EncryptionConfiguration"
  },
  "LoggingConfiguration": {
   "$ref": "#/definitions/LoggingConfiguration"
  },
  "Name": {
   "maxLength": 80,
   "minLength": 1,
   "type": "string"
  },
  "RoleArn": {
   "maxLength": 256,
   "minLength": 1,
   "type": "string"
  },
  "StateMachineName": {
   "maxLength": 80,
   "minLength": 1,
   "type": "string"
  },
  "StateMachineRevisionId": {
   "maxLength": 256,
   "minLength": 1,
   "type": "string"
  },
  "StateMachineType": {
   "enum": [
    "STANDARD",
    "EXPRESS"
   ],
   "type": "string"
  },
  "Tags": {
   "insertionOrder": false,
   "items": {
    "$ref": "#/definitions/TagsEntry"
   },
   "type": "array",
   "uniqueItems": false
  },
  "TracingConfiguration": {
   "$ref": "#/definitions/TracingConfiguration"
  }
 },
 "readOnlyProperties": [
  "/properties/Arn",
  "/properties/Name",
  "/properties/StateMachineRevisionId"
 ],
 "required": [
  "RoleArn"
 ],
 "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-stepfunctions.git",
 "tagging": {
  "cloudFormationSystemTags": true,
  "permissions": [
   "states:UntagResource",
   "states:TagResource",
   "states:ListTagsForResource"
  ],
  "tagOnCreate": true,
  "tagProperty": "/properties/Tags",
  "tagUpdatable": true,
  "taggable": true
 },
 "typeName": "AWS::StepFunctions::StateMachine",
 "writeOnlyProperties": [
  "/properties/Definition",
  "/properties/DefinitionS3Location",
  "/properties/DefinitionSubstitutions"
 ]
}